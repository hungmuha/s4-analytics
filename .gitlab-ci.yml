# .gitlab-ci.yml is the build script for the GitLab-CI builds.
# It is invoked upon every push to the GitLab server, but the
# specific tasks that are run depend on the branch being committed to.
# For a full configuration guide, visit http://docs.gitlab.com/ce/ci/yaml/README.html.

# cache build artifacts for the duration of the build
cache:
  key: "%CI_BUILD_REF_NAME%"
  paths:
  - src/S4Analytics/bin
  - src/S4Analytics/obj
  - src/S4Analytics/project.lock.json
  - src/S4Analytics/wwwroot/dist
  - src/S4Analytics/node_modules
  - test/S4Analytics.Tests/bin
  - test/S4Analytics.Tests/obj
  - test/S4Analytics.Tests/project.lock.json

stages:
  - build
  - deploy

.build:all: &build_script
  script:
  - rmdir src\S4Analytics\bin\Release\PublishOutput /s /q
  - dotnet restore
  - dotnet build "src\S4Analytics" --configuration Release --no-dependencies --no-incremental
  - cd src\S4Analytics
  - call npm prune
  - call npm update --cache-min=99999999
  - call npm install --cache-min=99999999
  - call webpack --config webpack.config.vendor.js
  - call webpack

build:dev:
  stage: build
  except:
  # master and feature branches only
  - staging
  - demo
  - release
  - tags
  before_script:
  # webpack looks for ASPNETCORE_ENVIRONMENT
  - set ASPNETCORE_ENVIRONMENT=Development
  - cd src\S4Analytics
  - call stylelint "ClientApp/**/*.css"
  - call tslint -c tslint.ci.json "ClientApp/**/*.ts"
  - cd ..\..
  <<: *build_script

build:others:
  stage: build
  only:
  - staging
  - demo
  - release
  <<: *build_script

# tests currently disabled because there are none written
# but the test stage adds at least a minute to the build time
.test:dev:
  stage: test
  # master and feature branches only
  except:
  - staging
  - demo
  - release
  - tags
  script:
  - dotnet test "test\S4Analytics.Tests"

.deploy:all: &deploy_script
  script:
  - copy app_offline.htm \\xplan-agssrv10\wwwroot\%CI_WEB_PATH%\ # app_offline.htm tells iis to shut down the site and release file locks
  - dotnet publish "src\S4Analytics" --no-build --configuration Release --output "%CD%\src\S4Analytics\bin\Release\PublishOutput"
  - msdeploy -verb:sync -source:contentPath="%CD%\src\S4Analytics\bin\Release\PublishOutput" -dest:contentPath="\\xplan-agssrv10\wwwroot\%CI_WEB_PATH%" -skip:Directory="download" -skip:Directory="logs" -skip:File="app_offline.htm"
  - del \\xplan-agssrv10\wwwroot\%CI_WEB_PATH%\app_offline.htm
  - (echo %CI_BUILD_ID%)>>\\xplan-agssrv10\wwwroot\%CI_WEB_PATH%\wwwroot\build.txt # write build number to build file

deploy:dev:
  stage: deploy
  only:
  - master
  before_script:
  - set CI_WEB_PATH=analytics-html5-dev
  - copy src\S4Analytics\web.Development.config src\S4Analytics\web.config
  <<: *deploy_script

deploy:staging:
  stage: deploy
  only:
  - staging
  before_script:
  - set CI_WEB_PATH=analytics-html5-staging
  - copy src\S4Analytics\web.Staging.config src\S4Analytics\web.config
  <<: *deploy_script

deploy:demo:
  stage: deploy
  only:
  - demo
  before_script:
  - set CI_WEB_PATH=analytics-html5-demo
  - copy src\S4Analytics\web.Demo.config src\S4Analytics\web.config
  <<: *deploy_script

deploy:release:
  stage: deploy
  only:
  - release
  before_script:
  - set CI_WEB_PATH=analytics-html5
  - copy src\S4Analytics\web.Release.config src\S4Analytics\web.config
  <<: *deploy_script
